legend.position = 'top',
legend.title = element_blank())+
scale_fill_viridis_c(name = "Balanced ACC", option = "C")+
# scale_x_continuous(limits = c(83.5, 86)) +  # 设置Y轴的值范围
# labs(title = 'Predicting Suicidal Ideation Age stratified by One-year old')+
ylab('Balanced ACC (%)')+
xlab('Cut-off Value for Suicidal Ideation Problem')+
theme(legend.position = "None",
axis.title.x = element_text(hjust = 0.5),
axis.title.y = element_text(hjust = 0.5))
p
MdlCoef <- list.files(
path = "../Res_2_Results/ResSensAna_Suicide_Score17/",
pattern = "Res.*xlsx",
full.names = T) %>%
import(verbose = T) %>%
select(-`...1`) %>%
pivot_longer(
cols = starts_with("Coef_"),
names_prefix = "Coef_",
names_to = "IterNum",
values_to = "Feature Importance [Regression Coefficient]"
) %>%
rename(Predictors = CoefName)
MdlCoef <- list.files(
path = "../Res_2_Results/ResSensAna_Suicide_Score17/",
pattern = "Res.*xlsx",
full.names = T) %>%
import(verbose = T)
View(MdlCoef)
MdlCoef <- list.files(
path = "../Res_2_Results/ResSensAna_Suicide_Score17/",
pattern = "Coef.*xlsx",
full.names = T) %>%
import(verbose = T) %>%
select(-`...1`) %>%
pivot_longer(
cols = starts_with("Coef_"),
names_prefix = "Coef_",
names_to = "IterNum",
values_to = "Feature Importance [Regression Coefficient]"
) %>%
rename(Predictors = CoefName)
CoefMain <- load.CoefMain.Suicide()
View(CoefMain)
View(MdlCoef)
View(CoefMain)
CoefMain <- load.CoefMain.Suicide(RemoveGradeFlag = F)
p <- AllRes %>%
ggplot(aes(y = balacc,
x = `Cut-off`,
fill = after_stat(x))) +
geom_violin(width=0.4,alpha=0.5,trim = T,scale = 'width')+
geom_boxplot(outlier.shape = NA,width = 0.15,alpha=0.1,
position = position_dodge(width = 0.4))+
scale_y_break(c(81.80,85.80))+
# geom_vline(aes(xintercept=mean(AllRes$balacc[AllRes$`Cut-off` == 'Total Sample'])),
#            colour='black',
#            linetype='dashed',
#            linewidth=1.1,
#            alpha=0.5)+
theme_bruce()+
theme(axis.text.x = element_text(angle = 0,hjust = 0.5),
panel.grid.major.y = element_line(colour = 'gray80',
linewidth = 0.2,
linetype = 'dashed'),
legend.position = 'top',
legend.title = element_blank())+
ggsci::scale_fill_d3()+
# scale_x_continuous(limits = c(83.5, 86)) +  # 设置Y轴的值范围
# labs(title = 'Predicting Suicidal Ideation Age stratified by One-year old')+
ylab('Balanced ACC (%)')+
xlab('Cut-off Value for Suicidal Ideation Problem')+
theme(legend.position = "None",
axis.title.x = element_text(hjust = 0.5),
axis.title.y = element_text(hjust = 0.5))
p
p <- AllRes %>%
ggplot(aes(y = balacc,
x = `Cut-off`,
fill = after_stat(x))) +
geom_violin(width=0.4,alpha=0.5,trim = T,scale = 'width')+
geom_boxplot(outlier.shape = NA,width = 0.15,alpha=0.1,
position = position_dodge(width = 0.4))+
scale_y_break(c(81.80,85.80))+
# geom_vline(aes(xintercept=mean(AllRes$balacc[AllRes$`Cut-off` == 'Total Sample'])),
#            colour='black',
#            linetype='dashed',
#            linewidth=1.1,
#            alpha=0.5)+
theme_bruce()+
theme(axis.text.x = element_text(angle = 0,hjust = 0.5),
panel.grid.major.y = element_line(colour = 'gray80',
linewidth = 0.2,
linetype = 'dashed'),
legend.position = 'top',
legend.title = element_blank())+
ggsci::scale_color_npg()+
# scale_x_continuous(limits = c(83.5, 86)) +  # 设置Y轴的值范围
# labs(title = 'Predicting Suicidal Ideation Age stratified by One-year old')+
ylab('Balanced ACC (%)')+
xlab('Cut-off Value for Suicidal Ideation Problem')+
theme(legend.position = "None",
axis.title.x = element_text(hjust = 0.5),
axis.title.y = element_text(hjust = 0.5))
p
p <- AllRes %>%
ggplot(aes(y = balacc,
x = `Cut-off`,
fill = after_stat(x))) +
geom_violin(width=0.4,alpha=0.5,trim = T,scale = 'width')+
geom_boxplot(outlier.shape = NA,width = 0.15,alpha=0.1,
position = position_dodge(width = 0.4))+
scale_y_break(c(81.80,85.80))+
# geom_vline(aes(xintercept=mean(AllRes$balacc[AllRes$`Cut-off` == 'Total Sample'])),
#            colour='black',
#            linetype='dashed',
#            linewidth=1.1,
#            alpha=0.5)+
theme_bruce()+
theme(axis.text.x = element_text(angle = 0,hjust = 0.5),
panel.grid.major.y = element_line(colour = 'gray80',
linewidth = 0.2,
linetype = 'dashed'),
legend.position = 'top',
legend.title = element_blank())+
ggsci::scale_color_d3()+
# scale_x_continuous(limits = c(83.5, 86)) +  # 设置Y轴的值范围
# labs(title = 'Predicting Suicidal Ideation Age stratified by One-year old')+
ylab('Balanced ACC (%)')+
xlab('Cut-off Value for Suicidal Ideation Problem')+
theme(legend.position = "None",
axis.title.x = element_text(hjust = 0.5),
axis.title.y = element_text(hjust = 0.5))
p
p <- AllRes %>%
ggplot(aes(y = balacc,
x = `Cut-off`,
fill = after_stat(x))) +
geom_violin(width=0.4,alpha=0.5,trim = T,scale = 'width')+
geom_boxplot(outlier.shape = NA,width = 0.15,alpha=0.1,
position = position_dodge(width = 0.4))+
scale_y_break(c(81.80,85.80))+
# geom_vline(aes(xintercept=mean(AllRes$balacc[AllRes$`Cut-off` == 'Total Sample'])),
#            colour='black',
#            linetype='dashed',
#            linewidth=1.1,
#            alpha=0.5)+
theme_bruce()+
theme(axis.text.x = element_text(angle = 0,hjust = 0.5),
panel.grid.major.y = element_line(colour = 'gray80',
linewidth = 0.2,
linetype = 'dashed'),
legend.position = 'top',
legend.title = element_blank())+
ggsci::scale_color_d3()+
# scale_x_continuous(limits = c(83.5, 86)) +  # 设置Y轴的值范围
# labs(title = 'Predicting Suicidal Ideation Age stratified by One-year old')+
ylab('Balanced ACC (%)')+
xlab('Cut-off Value for Suicidal Ideation Problem')+
theme(legend.position = "None",
axis.title.x = element_text(hjust = 0.5),
axis.title.y = element_text(hjust = 0.5))
p
p <- AllRes %>%
ggplot(aes(y = balacc,
x = `Cut-off`,
fill = after_stat(x))) +
geom_violin(width=0.4,alpha=0.5,trim = T,scale = 'width')+
geom_boxplot(outlier.shape = NA,width = 0.15,alpha=0.1,
position = position_dodge(width = 0.4))+
scale_y_break(c(81.80,85.80))+
# geom_vline(aes(xintercept=mean(AllRes$balacc[AllRes$`Cut-off` == 'Total Sample'])),
#            colour='black',
#            linetype='dashed',
#            linewidth=1.1,
#            alpha=0.5)+
theme_bruce()+
theme(axis.text.x = element_text(angle = 0,hjust = 0.5),
panel.grid.major.y = element_line(colour = 'gray80',
linewidth = 0.2,
linetype = 'dashed'),
legend.position = 'top',
legend.title = element_blank())+
ggsci::scale_color_jama()+
# scale_x_continuous(limits = c(83.5, 86)) +  # 设置Y轴的值范围
# labs(title = 'Predicting Suicidal Ideation Age stratified by One-year old')+
ylab('Balanced ACC (%)')+
xlab('Cut-off Value for Suicidal Ideation Problem')+
theme(legend.position = "None",
axis.title.x = element_text(hjust = 0.5),
axis.title.y = element_text(hjust = 0.5))
p
p <- AllRes %>%
ggplot(aes(y = balacc,
x = `Cut-off`,
fill = after_stat(x))) +
geom_violin(width=0.4,alpha=0.5,trim = T,scale = 'width')+
geom_boxplot(outlier.shape = NA,width = 0.15,alpha=0.1,
position = position_dodge(width = 0.4))+
scale_y_break(c(81.80,85.80))+
# geom_vline(aes(xintercept=mean(AllRes$balacc[AllRes$`Cut-off` == 'Total Sample'])),
#            colour='black',
#            linetype='dashed',
#            linewidth=1.1,
#            alpha=0.5)+
theme_bruce()+
theme(axis.text.x = element_text(angle = 0,hjust = 0.5),
panel.grid.major.y = element_line(colour = 'gray80',
linewidth = 0.2,
linetype = 'dashed'),
legend.position = 'top',
legend.title = element_blank())+
ggsci::scale_color_jama()+
# scale_x_continuous(limits = c(83.5, 86)) +  # 设置Y轴的值范围
# labs(title = 'Predicting Suicidal Ideation Age stratified by One-year old')+
ylab('Balanced ACC (%)')+
xlab('Cut-off Value for Suicidal Ideation Problem')+
theme(legend.position = "None",
axis.title.x = element_text(hjust = 0.5),
axis.title.y = element_text(hjust = 0.5))
p
p <- AllRes %>%
ggplot(aes(y = balacc,
x = `Cut-off`,
fill = `Cut-off`)) +
geom_violin(width=0.4,alpha=0.5,trim = T,scale = 'width')+
geom_boxplot(outlier.shape = NA,width = 0.15,alpha=0.1,
position = position_dodge(width = 0.4))+
scale_y_break(c(81.80,85.80))+
# geom_vline(aes(xintercept=mean(AllRes$balacc[AllRes$`Cut-off` == 'Total Sample'])),
#            colour='black',
#            linetype='dashed',
#            linewidth=1.1,
#            alpha=0.5)+
theme_bruce()+
theme(axis.text.x = element_text(angle = 0,hjust = 0.5),
panel.grid.major.y = element_line(colour = 'gray80',
linewidth = 0.2,
linetype = 'dashed'),
legend.position = 'top',
legend.title = element_blank())+
ggsci::scale_fill_jama()+
# scale_x_continuous(limits = c(83.5, 86)) +  # 设置Y轴的值范围
# labs(title = 'Predicting Suicidal Ideation Age stratified by One-year old')+
ylab('Balanced ACC (%)')+
xlab('Cut-off Value for Suicidal Ideation Problem')+
theme(legend.position = "None",
axis.title.x = element_text(hjust = 0.5),
axis.title.y = element_text(hjust = 0.5))
p
p <- AllRes %>%
ggplot(aes(y = balacc,
x = `Cut-off`,
fill = `Cut-off`)) +
geom_violin(width=0.4,alpha=0.5,trim = T,scale = 'width')+
geom_boxplot(outlier.shape = NA,width = 0.15,alpha=0.1,
position = position_dodge(width = 0.4))+
scale_y_break(c(81.80,85.80))+
# geom_vline(aes(xintercept=mean(AllRes$balacc[AllRes$`Cut-off` == 'Total Sample'])),
#            colour='black',
#            linetype='dashed',
#            linewidth=1.1,
#            alpha=0.5)+
theme_bruce()+
theme(axis.text.x = element_text(angle = 0,hjust = 0.5),
panel.grid.major.y = element_line(colour = 'gray80',
linewidth = 0.2,
linetype = 'dashed'),
legend.position = 'top',
legend.title = element_blank())+
ggsci::scale_fill_lancet()+
# scale_x_continuous(limits = c(83.5, 86)) +  # 设置Y轴的值范围
# labs(title = 'Predicting Suicidal Ideation Age stratified by One-year old')+
ylab('Balanced ACC (%)')+
xlab('Cut-off Value for Suicidal Ideation Problem')+
theme(legend.position = "None",
axis.title.x = element_text(hjust = 0.5),
axis.title.y = element_text(hjust = 0.5))
p
MdlCoef <- list.files(
path = "../Res_2_Results/ResSensAna_Suicide_Score17/",
pattern = "Coef.*xlsx",
full.names = T) %>%
import(verbose = T) %>%
select(-`...1`) %>%
pivot_longer(
cols = starts_with("Coef_"),
names_prefix = "Coef_",
names_to = "IterNum",
values_to = "Feature Importance [Regression Coefficient]"
) %>%
rename(Predictors = CoefName)
CoefMain <- load.CoefMain.Suicide(RemoveGradeFlag = F)
MdlCoef$`Cut-off` <- "PANSI >= 17"
CoefMain$`Cut-off` <- "PANSI >= 43"
AllCoefs <- rbind(ResMain,MdlRes)
AllCoefs$`Cut-off` <- AllCoefs$`Cut-off` %>%
factor(levels = c("PANSI >= 43","PANSI >= 17"))
AllCoefs <- rbind(CoefMain,MdlCoef)
AllCoefs$`Cut-off` <- AllCoefs$`Cut-off` %>%
factor(levels = c("PANSI >= 43","PANSI >= 17"))
AllCoefs$Predictors %>% unique()
Coefs_95CI <- AllCoefs %>%
summarise(M = median(`Feature Importance [Regression Coefficient]`),
Up = quantile(`Feature Importance [Regression Coefficient]`,0.95),
Low = quantile(`Feature Importance [Regression Coefficient]`,0.05),
.by = c(`Cut-off`,Predictors)) %>%
as.data.frame() %>%
arrange(pick(c(`Cut-off`,Predictors)))
p <- Coefs_95CI %>%
ggplot(aes(fill = `Cut-off`, color = `Cut-off`)) +
geom_errorbar(aes(y = M, x = Predictors,
ymin = Low,
ymax = Up),
width = 0.5,
linewidth = 0.6,
position = position_dodge(width = 0.6))+
geom_point(mapping = aes(y = M,
x = Predictors),
size = 1.5,
position = position_dodge(width = 0.6)) +
theme_bruce()+
theme(axis.text.x = element_text(angle = 15,hjust = 1),
panel.grid.major.y = element_line(colour = 'gray80',
linewidth = 0.2,
linetype = 'dashed'),
legend.position = 'top',
legend.title = element_blank()) +
ylab("Feature Importance [Regression Coefficient]")
p
AllCoefs <- rbind(CoefMain,MdlCoef)
AllCoefs$`Cut-off` <- AllCoefs$`Cut-off` %>%
factor(levels = c("PANSI >= 43","PANSI >= 17"))
AllCoefs$Predictors <- AllCoefs(data_coef$Predictors,
levels = c('Anx_Sum','Stress_Sum','AcadBO_Sum',
'IAT_Sum','SelfInjury_Sum',
'Grade'),
labels = c('Anxiety','Perceived Stress','Academic Burn-out',
'Internet Addiction','Non-suicidal Self-injury',
'Age'))
Coefs_95CI <- AllCoefs %>%
summarise(M = median(`Feature Importance [Regression Coefficient]`),
Up = quantile(`Feature Importance [Regression Coefficient]`,0.95),
Low = quantile(`Feature Importance [Regression Coefficient]`,0.05),
.by = c(`Cut-off`,Predictors)) %>%
as.data.frame() %>%
arrange(pick(c(`Cut-off`,Predictors)))
AllCoefs$Predictors <- factor(AllCoefs$Predictors,
levels = c('Anx_Sum','Stress_Sum','AcadBO_Sum',
'IAT_Sum','SelfInjury_Sum',
'Grade'),
labels = c('Anxiety','Perceived Stress','Academic Burn-out',
'Internet Addiction','Non-suicidal Self-injury',
'Age'))
Coefs_95CI <- AllCoefs %>%
summarise(M = median(`Feature Importance [Regression Coefficient]`),
Up = quantile(`Feature Importance [Regression Coefficient]`,0.95),
Low = quantile(`Feature Importance [Regression Coefficient]`,0.05),
.by = c(`Cut-off`,Predictors)) %>%
as.data.frame() %>%
arrange(pick(c(`Cut-off`,Predictors)))
p <- Coefs_95CI %>%
ggplot(aes(fill = `Cut-off`, color = `Cut-off`)) +
geom_errorbar(aes(y = M, x = Predictors,
ymin = Low,
ymax = Up),
width = 0.5,
linewidth = 0.6,
position = position_dodge(width = 0.6))+
geom_point(mapping = aes(y = M,
x = Predictors),
size = 1.5,
position = position_dodge(width = 0.6)) +
theme_bruce()+
theme(axis.text.x = element_text(angle = 15,hjust = 1),
panel.grid.major.y = element_line(colour = 'gray80',
linewidth = 0.2,
linetype = 'dashed'),
legend.position = 'top',
legend.title = element_blank()) +
ylab("Feature Importance [Regression Coefficient]")
p
p <- Coefs_95CI %>%
ggplot(aes(fill = `Cut-off`, color = `Cut-off`)) +
geom_errorbar(aes(y = M, x = Predictors,
ymin = Low,
ymax = Up),
width = 0.2,
linewidth = 0.6,
position = position_dodge(width = 0.6))+
geom_point(mapping = aes(y = M,
x = Predictors),
size = 1.5,
position = position_dodge(width = 0.6)) +
theme_bruce()+
theme(axis.text.x = element_text(angle = 15,hjust = 1),
panel.grid.major.y = element_line(colour = 'gray80',
linewidth = 0.2,
linetype = 'dashed'),
legend.position = 'top',
legend.title = element_blank()) +
ylab("Feature Importance [Regression Coefficient]")
p
AllCoefs <- rbind(CoefMain,MdlCoef)
AllCoefs$`Cut-off` <- AllCoefs$`Cut-off` %>%
factor(levels = c("PANSI >= 43","PANSI >= 17"))
AllCoefs$Predictors <- factor(AllCoefs$Predictors,
levels = c('Anx_Sum',
'SelfInjury_Sum',
'Stress_Sum',
'IAT_Sum',
'AcadBO_Sum',
'Grade'),
labels = c('Anxiety',
'Non-suicidal Self-injury',
'Perceived Stress',
'Internet Addiction',
'Academic Burn-out',
'Age'))
Coefs_95CI <- AllCoefs %>%
summarise(M = median(`Feature Importance [Regression Coefficient]`),
Up = quantile(`Feature Importance [Regression Coefficient]`,0.95),
Low = quantile(`Feature Importance [Regression Coefficient]`,0.05),
.by = c(`Cut-off`,Predictors)) %>%
as.data.frame() %>%
arrange(pick(c(`Cut-off`,Predictors)))
p <- Coefs_95CI %>%
ggplot(aes(fill = `Cut-off`, color = `Cut-off`)) +
geom_errorbar(aes(y = M, x = Predictors,
ymin = Low,
ymax = Up),
width = 0.2,
linewidth = 0.6,
position = position_dodge(width = 0.6))+
geom_point(mapping = aes(y = M,
x = Predictors),
size = 1.5,
position = position_dodge(width = 0.6)) +
theme_bruce()+
theme(axis.text.x = element_text(angle = 15,hjust = 1),
panel.grid.major.y = element_line(colour = 'gray80',
linewidth = 0.2,
linetype = 'dashed'),
legend.position = 'top',
legend.title = element_blank()) +
ylab("Feature Importance [Regression Coefficient]")
p
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_4_SensitivityAnalysis/SensAna_15_RepVis_8_VisualizeSuicideScore17.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_15_FiguresExtract.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_9_Subgroup_Dep.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_10_Subgroup_Suicide.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_15_FiguresExtract.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_15_FiguresExtract.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_15_FiguresExtract.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_15_FiguresExtract.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_15_FiguresExtract.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_9_Subgroup_Dep.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_9_Subgroup_Dep.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_9_Subgroup_Dep.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_10_Subgroup_Suicide.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_10_Subgroup_Suicide.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_15_FiguresExtract.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_9_Subgroup_Dep.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_10_Subgroup_Suicide.R")
source("G:/ProfFang_Data/DataAnalysis_OpenSource_Codes/Step_3_AutoReportVisualization/RepVis_15_FiguresExtract.R")
library(bruceR)
library(ggbreak)
library(ggridges)
library(svglite)
set.wd()
source("../Supp_0_Subfunctions/s_SensitivityAnalysis_RepVis.R")
MdlCoef <- list.files(
path = "../Res_2_Results/ResSensAna_Suicide_Score17/",
pattern = "Coef.*xlsx",
full.names = T) %>%
import(verbose = T) %>%
select(-`...1`) %>%
pivot_longer(
cols = starts_with("Coef_"),
names_prefix = "Coef_",
names_to = "IterNum",
values_to = "Feature Importance [Regression Coefficient]"
) %>%
rename(Predictors = CoefName)
CoefMain <- load.CoefMain.Suicide(RemoveGradeFlag = F)
MdlCoef$`Cut-off` <- "PANSI >= 17"
CoefMain$`Cut-off` <- "PANSI >= 43"
AllCoefs <- rbind(CoefMain,MdlCoef)
AllCoefs$`Cut-off` <- AllCoefs$`Cut-off` %>%
factor(levels = c("PANSI >= 43","PANSI >= 17"))
AllCoefs$Predictors <- factor(AllCoefs$Predictors,
levels = c('Anx_Sum',
'SelfInjury_Sum',
'Stress_Sum',
'IAT_Sum',
'AcadBO_Sum',
'Grade'),
labels = c('Anxiety',
'Non-suicidal Self-injury',
'Perceived Stress',
'Internet Addiction',
'Academic Burn-out',
'Age'))
Coefs_95CI <- AllCoefs %>%
summarise(M = median(`Feature Importance [Regression Coefficient]`),
Up = quantile(`Feature Importance [Regression Coefficient]`,0.95),
Low = quantile(`Feature Importance [Regression Coefficient]`,0.05),
.by = c(`Cut-off`,Predictors)) %>%
as.data.frame() %>%
arrange(pick(c(`Cut-off`,Predictors)))
View(Coefs_95CI)
